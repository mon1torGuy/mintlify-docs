{
	"openapi": "3.0.0",
	"info": {
		"title": "Type Auth API",
		"description": "API for managing applications, authentication, monitoring, and security features",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "https://api.typeauth.com"
		}
	],
	"tags": [
		{
			"name": "Applications",
			"description": "Application management endpoints"
		},
		{
			"name": "Keys",
			"description": "API key management endpoints"
		},
		{
			"name": "JWT",
			"description": "JWT configuration endpoints"
		},
		{
			"name": "JWK",
			"description": "JWK (JSON Web Key) management endpoints"
		},
		{
			"name": "Security",
			"description": "Security and firewall configuration endpoints"
		},
		{
			"name": "Abuse Prevention",
			"description": "Abuse prevention and rate limiting endpoints"
		},
		{
			"name": "Monitoring",
			"description": "Application monitoring endpoints"
		},
		{
			"name": "Routing",
			"description": "Route configuration endpoints"
		},
		{
			"name": "Tags",
			"description": "Tag management endpoints"
		}
	],
	"paths": {
		"/{account_id}/applications/create": {
			"post": {
				"tags": ["Applications"],
				"summary": "Create a new application",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateApplicationRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Application created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApplicationResponse"
								}
							}
						}
					}
				}
			}
		},
		"/{account_id}/applications": {
			"get": {
				"tags": ["Applications"],
				"summary": "List all applications",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Applications retrieved successfully"
					}
				}
			}
		},
		"/{account_id}/applications/{id}": {
			"get": {
				"tags": ["Applications"],
				"summary": "Get application details",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Application details retrieved successfully"
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"summary": "Update application",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Application updated successfully"
					}
				}
			},
			"delete": {
				"tags": ["Applications"],
				"summary": "Delete application",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Application deleted successfully"
					}
				}
			}
		},
		"/{account_id}/keys/create": {
			"post": {
				"tags": ["Keys"],
				"summary": "Create new API keys",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateKeyRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Keys created successfully"
					}
				}
			}
		},
		"/{account_id}/keys/{keyId}/verify": {
			"get": {
				"tags": ["Keys"],
				"summary": "Verify a key",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "keyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Key verified successfully"
					}
				}
			}
		},
		"/{account_id}/jwk": {
			"get": {
				"tags": ["JWK"],
				"summary": "List all JWKs",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "JWKs retrieved successfully"
					}
				}
			}
		},
		"/{account_id}/jwk/create": {
			"post": {
				"tags": ["JWK"],
				"summary": "Create a new JWK",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateJWKRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "JWK created successfully"
					}
				}
			}
		},
		"/{account_id}/jwt": {
			"get": {
				"tags": ["JWT"],
				"summary": "List all JWTs",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "JWTs retrieved successfully"
					}
				}
			}
		},
		"/{account_id}/jwt/create": {
			"post": {
				"tags": ["JWT"],
				"summary": "Create a new JWT",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateJWTRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "JWT created successfully"
					}
				}
			}
		},
		"/{account_id}/security/geoblock/{id}": {
			"put": {
				"tags": ["Security"],
				"summary": "Update geoblocking settings",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Geoblocking settings updated successfully"
					}
				}
			}
		},
		"/{account_id}/abuse": {
			"get": {
				"tags": ["Abuse Prevention"],
				"summary": "List all abuse prevention profiles",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Abuse prevention profiles retrieved successfully"
					}
				}
			}
		},
		"/{account_id}/abuse/create": {
			"post": {
				"tags": ["Abuse Prevention"],
				"summary": "Create a new abuse prevention profile",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAbuseProfileRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Abuse prevention profile created successfully"
					}
				}
			}
		},
		"/{account_id}/monitor/create": {
			"post": {
				"tags": ["Monitoring"],
				"summary": "Create a new monitor",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMonitorRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Monitor created successfully"
					}
				}
			}
		},
		"/{account_id}/monitor/{monitor_id}": {
			"get": {
				"tags": ["Monitoring"],
				"summary": "Get a monitor",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Monitor retrieved successfully"
					},
					"404": {
						"description": "Monitor not found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			},
			"delete": {
				"tags": ["Monitoring"],
				"summary": "Delete a monitor",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"201": {
						"description": "Monitor created successfully"
					},
					"404": {
						"description": "Monitor not found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
		"/{account_id}/routing": {
			"get": {
				"tags": ["Routing"],
				"summary": "List all routing profiles",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Routing profiles retrieved successfully"
					}
				}
			}
		},
		"/{account_id}/routing/create": {
			"post": {
				"tags": ["Routing"],
				"summary": "Create a new routing profile",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateRoutingRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Routing profile created successfully"
					}
				}
			}
		},
		"/{account_id}/tags": {
			"get": {
				"tags": ["Tags"],
				"summary": "List all tags",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Tags retrieved successfully"
					}
				}
			}
		},
		"/{account_id}/tag/{tag_id}": {
			"delete": {
				"tags": ["Tags"],
				"summary": "Delete a tag",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Tag deleted successfully"
					}
				}
			}
		},
		"/{account_id}/tag/create": {
			"post": {
				"tags": ["Tags"],
				"summary": "Create a new tag",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateTagRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Tag created successfully"
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"ApplicationResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Application"
						}
					}
				}
			},
			"Application": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"domain": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"originHostname": {
						"type": "string"
					},
					"detailResponse": {
						"type": "boolean"
					},
					"auth_id": {
						"type": "string"
					},
					"llmcache_id": {
						"type": "string"
					},
					"abuse_id": {
						"type": "string"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"KeyResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Key"
						}
					}
				}
			},
			"Key": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"expires": {
						"type": "integer",
						"nullable": true
					},
					"remaining": {
						"type": "integer",
						"nullable": true
					},
					"ratelimit": {
						"type": "object",
						"nullable": true
					},
					"refill": {
						"type": "object",
						"nullable": true
					}
				}
			},
			"JWKResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/JWK"
						}
					}
				}
			},
			"JWK": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"jwk": {
						"type": "object"
					},
					"kid": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"jwtEndpoint": {
						"type": "string"
					},
					"lastChecked": {
						"type": "integer"
					}
				}
			},
			"JWTResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/JWT"
						}
					}
				}
			},
			"JWT": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"exp": {
						"type": "integer"
					},
					"nbf": {
						"type": "integer"
					},
					"kid": {
						"type": "string"
					},
					"keys": {
						"type": "string"
					},
					"jwk": {
						"type": "string"
					}
				}
			},
			"SecurityResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SecuritySetting"
						}
					}
				}
			},
			"SecuritySetting": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"isGeoBlock": {
						"type": "boolean"
					},
					"geoBlock": {
						"type": "string",
						"nullable": true
					},
					"isFirewall": {
						"type": "boolean"
					}
				}
			},
			"AbuseProfileResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AbuseProfile"
						}
					}
				}
			},
			"AbuseProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"blocklist": {
						"type": "string"
					},
					"exceptions": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"globalratelimit": {
						"type": "object",
						"properties": {
							"Requests": {
								"type": "integer"
							},
							"Interval": {
								"type": "string"
							}
						}
					}
				}
			},
			"MonitorResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Monitor"
						}
					}
				}
			},
			"Monitor": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"status_code": {
						"type": "integer"
					},
					"mon_status": {
						"type": "boolean"
					},
					"responseStatus": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"RoutingResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RoutingProfile"
						}
					}
				}
			},
			"RoutingProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"endpoints": {
						"type": "string"
					},
					"app_name": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"TagResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Tag"
						}
					}
				}
			},
			"Tag": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				}
			},
			"ErrorResponse": {
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "array",
						"items": {
							"type": "object"
						}
					}
				}
			}
		}
	}
}
